#########################################################################
devtools::check
#########################################################################
copying QPot to QPOTcopy
go into QPotcopy folder
start R
library(devtools)
check()
Gives these warnings:
------------------------------------------------------------------------
SOLVED 31 July 2015
#changed upwindorderedv4 to QPot
* checking foreign function calls ... WARNING
Foreign function call to a different package:
  .C("quasipotential", ..., PACKAGE = "upwindorderedv4")
Undeclared package in foreign function calls:
   ‘upwindorderedv4’
See chapter ‘System and foreign language interfaces’ in the ‘Writing R
Extensions’ manual.
------------------------------------------------------------------------
* checking Rd \usage sections ... WARNING
Undocumented arguments in documentation object 'QPotential'
  ‘xstart’ ‘xrange’ ‘xsteps’ ‘yrhs’ ‘ystart’ ‘yrange’ ‘ysteps’
  ‘filename’ ‘savetoR’ ‘savetoHD’ ‘bounce’ ‘bounceedge’

Documented arguments not in \usage in documentation object 'defaultTest':
  ‘NONE’

Functions with \usage entries need to have the appropriate \alias
entries, and all their arguments documented.
The \usage entries must correspond to syntactically valid R code.
See chapter ‘Writing R documentation files’ in the ‘Writing R
Extensions’ manual.
------------------------------------------------------------------------
#SOLVED 31 JULY 2015
#REMOVED @param none from file
* checking Rd contents ... WARNING
Argument items with no description in Rd object 'defaultTest':
  ‘NONE’
------------------------------------------------------------------------
* checking PDF version of manual ... WARNING
LaTeX errors when creating PDF version.
This typically indicates Rd problems.
------------------------------------------------------------------------
* checking top-level files ... NOTE
Non-standard files/directories found at top level:
  ‘Install-Instructions-self.txt’ ‘README-chris.txt’
  ‘devtools-check-results.txt’ ‘loadall.R’ ‘test’


#########################################################################
Install_instructions_self
#########################################################################
R CMD REMOVE QPot
R CMD build QPot
#copy tar.gz to /home to install
#can't install across partitions
R CMD INSTALL QPot_


#########################################################################
TODO
#########################################################################
./configure 
----------------------------------------
test configure for windows


Ccode
----------------------------------------
check to make sure long type isn't used.
do not call C rand, but use R rand
run "nm -pg mypkg.so" and look for unsatisfied entry points(?) check "if any of the symbols marked U is unexpected."
maybe change variable names
"It is not portable to call compiled code in R or other packages via .Internal, .C, .Fortran, .Call or .External, since such interfaces are subject to change without notice and will probably result in your code terminating the R process. " Then how do you call them?

General 
---------------------------------------
Do not use paste in error statements in R


#########################################################################
TODO
#########################################################################
#loadall.R reads in the three function files
print("Recompiling C code")
#system("R CMD SHLIB -I/usr/local/include -L/usr/local/lib -lmatheval upwindorderedMATHEVALv4.c -lm")
system("R CMD SHLIB ./src/upwindorderedMATHEVALv4.c -lm")	#compiles, but does not find evaluator_evaluate_x_y
system("R CMD SHLIB -Lsrc/libmatheval -lmatheval upwindorderedMATHEVALv4.c -lm") # no rule to make .o needed for .so
system("R CMD SHLIB -Isrc/libmatheval -lmatheval upwindorderedMATHEVALv4.c -lm") #no rule to make .o needed by .so
system("R CMD SHLIB -o src/libmatheval/matheval.o -c src/libmatheval/matheval.c")
system("R CMD SHLIB src/upwindorderedMATHEVALv4.c src/libmatheval/matheval.o -lm") # no rule to make upwind.o needed by upwind.so
print("Reloading C code into R")
currentupwindordered = "src/upwindorderedMATHEVALv4"
try( dyn.load(paste(currentupwindordered, ".so", sep = "")) )
print("Loading functions")
source('./R/upwindordered.R')
source('./test/testcases.R')


gcc -o myprog myprog.c -L/home/newhall/lib -lmine
