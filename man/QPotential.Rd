% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/QPotential.R
\name{QPotential}
\alias{QPotential}
\title{Wrapper for call to quasipotential computation using the upwind ordered method}
\usage{
QPotential(x.rhs = "NULL", x.start = "NULL", x.bound = "NULL",
  x.num.steps = "NULL", y.rhs = "NULL", y.start = "NULL",
  y.bound = "NULL", y.num.steps = "NULL", filename = "NULL",
  save.to.R = TRUE, save.to.HD = FALSE, bounce = "d",
  bounce.edge = 0.01, verboseR = FALSE, verboseC = FALSE,
  debugC = FALSE)
}
\arguments{
\item{x.rhs}{A string containing the right hand side of the equation for x.}

\item{x.start}{The starting value of x, usually the x value of the current equilibrium.}

\item{x.bound}{The x boundaries denoted at c(minimum, maximum).}

\item{x.num.steps}{The number of steps between the minimum and maximum x value defined in x range.}

\item{y.rhs}{A string containing the right hand side of the y equation.}

\item{y.start}{The starting value of y, usually the y value of the current equilibrium.}

\item{y.bound}{The y boundaries denoted at c(minimum, maximum).}

\item{y.num.steps}{The number of steps between the minimum and maximum y value defined in y range.}

\item{filename}{String for the name of the file saved to the hard drive.  If filename is left blank, output file saved as defaultname-xX.STARTyY.START.txt, where X.START and Y.START are values in x.start and y.start, respectively.}

\item{save.to.R}{Output the matrix of results for the upwind-ordered method to the current R session.  The default is not to write the matrix to the R session.  save.to.R=TRUE writes the output matrix to the R session.}

\item{save.to.HD}{Write the matrix of results for the upwind-ordered method to the hard drive named filename.  Default is TRUE.}

\item{bounce}{By default, the upwind-ordered method stops when the boundaries are reached.  The bounce parameter allows the (d)efault action, only (p)ositive values to be tested, or reflection near the boundaries (bounce = 'b').}

\item{bounce.edge}{If bounce = 'b', then to prevent the upwind-ordered method from reaching the boundaries, temporary boundaries are created inside the boundaries defined by x.bound and y.bound.  The boundary edge is bounce.edge of the total range.  Default is 0.01}

\item{verboseR}{NOT IMPLEMENTED: Flag (default = FALSE) for printing out information in QPotential Rwrapper}

\item{verboseC}{NOT IMPLEMENTED: Flag (default = FALSE) for printing out useful-for-everyone information in quasipotential.C}

\item{debugC}{NOT IMPLEMENTED: Flag (default = FALSE) for printing out debugging C code}
}
\value{
filetoHD If save.to.HD enabled, then saves a file in the current directory as either filename or as defaultname-xXSTARTyYSTART.txt

filetoR If save.to.R enabled, then the function QPotential returns a matrix containing  the upwind-ordered results to be used for plotting.  Requires a variable to catch the returned matrix, i.e. storage <- QPotential(parameters...)
}
\description{
Wrapper for call to quasipotential computation using the upwind ordered method
}
\examples{
#Example 1, Equilibrium 1 from article
#Equations
equationx = "1.5*x*(1.0-(x/45.0))-(y*x*5.0)/(18.0+x)"
equationy = "-4.0*y+((10.0*x*y)/(18.0+x))"
#Boundaries of the x and y state space
xbounds = c(-0.5, 20.0)
ybounds = c(-0.5, 20.0)
# Step number
# In the examples, these are 4100
# set to a smaller number for this example
xstepnumber = 1000
ystepnumber = 1000
# Equilibrium x and y values for Equilibrium 1 in Example 1
xinit1 = 1.40491
yinit1 = 2.80808
storage.eq1 <- QPotential(x.rhs = equationx, x.start = xinit1,
 x.bound = xbounds, x.num.steps = xstepnumber,
 y.rhs = equationy, y.start = yinit1,
 y.bound = ybounds, y.num.steps = ystepnumber)
}

